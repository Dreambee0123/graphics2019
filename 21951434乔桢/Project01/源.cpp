#include <stdlib.h>  
#include <glut.h>  
#include<iostream>
using namespace std;
GLfloat rotate_v = 0.0;// ???????????
GLfloat rotate_angle = 0.0;//shezhi??????
GLfloat anglex = 0.0;//X ?????
GLfloat angley = 0.0;//Y ?????
GLfloat anglez = 0.0;//Z ?????
GLfloat scale = 1.0;//???????
GLint WinW = 400;
GLint WinH = 400;
GLfloat oldx;//????????????????????  
GLfloat oldy;
void init(void) {
	glClearColor(0.0, 0.0, 0.0, 1.0); //???????  
}
void display(void) {
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0, 0.0, 0.0); //??????
	// glLoadIdentity?????λ???? ?????Σ??????????о???任?????λ?????λ???????
	glLoadIdentity();   
	// gluLookAt???????
	// [0,1,2]?????????
	// [3,4,5]??????????
	// [6,7,8]???????????????????????е????
	gluLookAt(0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);  
	// glRotatef(angle, x_axis, y_axis, z_axis)
	// x_axis, y_axis, z_axis?????????????????????0-false???????0-true
	glRotatef(rotate_angle, 0.0f, 1.0f, 0.0f);
	glRotatef(anglex, 1.0, 0.0, 0.0);
	glRotatef(angley, 0.0, 1.0, 0.0);
	glRotatef(anglez, 0.0, 0.0, 1.0);
	glScalef(scale, scale, scale);
	glutSolidTeapot(1);
	rotate_angle += rotate_v;
	// glutSwapBuffers??????????????????????????
	glutSwapBuffers();
}
void reshape(int w, int h) {
	glViewport(0, 0, (GLsizei)w, (GLsizei)h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluPerspective(60.0, (GLfloat)w / (GLfloat)h, 1.0, 20.0);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	gluLookAt(0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);
}
void mouse(int button, int state, int x, int y) {
	if (button == GLUT_LEFT_BUTTON) {
		if (state == GLUT_DOWN) {
			rotate_v = 0;
			rotate_angle = 0;
			oldx = x;//????????????????????  
			oldy = y;
			cout << "left" << endl;
		}

	}
	if (button == GLUT_RIGHT_BUTTON) {
		if (state == GLUT_DOWN) {
			scale += 0.1f;
			cout << "right" << endl;
		}

	}
}

void keyboard(int key, int x, int y) {
	if (key == GLUT_KEY_DOWN) {
		scale -= 0.1f;
		if (scale < 0) {
			scale = 0.0f;
		}
	}
	if (key == GLUT_KEY_UP) {
		scale += 0.1f;
		if (scale > 2) {
			scale = 2.0f;
		}
	}
}
void motion(int x, int y)
{
	// Сtrick: ???????x?????????????????????y?????
	GLint deltax = y - oldy;
	GLint deltay = x - oldx;
	// ????????????????????????????????
	anglex += 360 * (GLfloat)deltax / (GLfloat)WinW;  
	angley += 360 * (GLfloat)deltay / (GLfloat)WinH;
	// ??????????????????????????????360???????????
	if (anglex > 360) {
		anglex -= 360;
	}
	if (angley > 360) {
		angley -= 360;
	}
	// anglez += 360 * (GLfloat)deltay / (GLfloat)WinH;
	oldx = x;  
	oldy = y;
	// glutPostRedisplay???????
	glutPostRedisplay();
}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(600, 600);
	glutInitWindowPosition(100, 100);
	glutCreateWindow(argv[0]);
	init();
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMouseFunc(mouse);
	glutSpecialFunc(keyboard);
	glutMotionFunc(motion);
	glutIdleFunc(display);
	glutMainLoop();
	return 0;
}